name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Run unit tests
        run: flutter test test/unit/ --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          name: codecov-umbrella
          fail_ci_if_error: false

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libblkid-dev liblzma-dev

      - name: Enable platform (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: flutter config --enable-linux-desktop

      - name: Enable platform (macOS)
        if: matrix.os == 'macos-latest'
        run: flutter config --enable-macos-desktop

      - name: Enable platform (Windows)
        if: matrix.os == 'windows-latest'
        run: flutter config --enable-windows-desktop

      - name: Build for platform
        run: flutter build ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'macos' || 'windows' }}

  # Integration tests (only run on Ubuntu for speed)
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Start virtual display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          
      - name: Run integration tests
        run: |
          export DISPLAY=:99
          flutter test test/integration/

  # Build and create release artifacts (only on release tags)
  build-artifacts:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build-script: ./scripts/build_linux.sh
            artifact-name: mtg-card-display-linux
            artifact-path: build/linux/x64/release/bundle/
          - os: macos-latest
            build-script: ./scripts/build_macos.sh
            artifact-name: mtg-card-display-macos
            artifact-path: build/macos/Build/Products/Release/random_mtg_card.app
          - os: windows-latest
            build-script: ./scripts/build_windows.bat
            artifact-name: mtg-card-display-windows
            artifact-path: build/windows/runner/Release/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libblkid-dev liblzma-dev

      - name: Make build script executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x ${{ matrix.build-script }}

      - name: Build application
        run: ${{ matrix.build-script }} release

      - name: Create archive (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd build/linux/x64/release/bundle/
          tar -czf ../../../../../mtg-card-display-linux.tar.gz .

      - name: Create archive (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd build/macos/Build/Products/Release/
          zip -r ../../../../../mtg-card-display-macos.zip random_mtg_card.app

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd build/windows/runner/Release/
          7z a ../../../../mtg-card-display-windows.zip .

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mtg-card-display-*.zip
            mtg-card-display-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 